- name: Azure Container Apps Build and Deploy
  uses: Azure/container-apps-deploy-action@v0
  with:
    # Absolute path on the GitHub runner of the source application code to be built.
    appSourcePath: # optional
    # The name of the Azure Container Registry that the runnable application image will be pushed to.
    acrName: acrtest18
    # 'The username used to authenticate push requests to the provided Azure Container Registry. If not provided, an
#access token will be generated via "az acr login" and provided to "docker login" to authenticate the requests.'

    acrUsername: acrtest18
    # 'The password used to authenticate push requests to the provided Azure Container Registry. If not provided, an
#access token will be generated via "az acr login" and provided to "docker login" to authenticate the requests.'

    acrPassword: SVl6COq+Z8KP/BU2RMEpf/xmcd96hBkWo2wLER+BNQ+ACRB+H1XQ
    # 'Azure credentials used by the `azure/login` action to authenticate Azure CLI requests if the user has not
#previously authenticated in the workflow calling this action.'

    azureCredentials: # optional
    # 'The custom name of the image that is to be built, pushed to ACR and deployed to the Container App by this action.
#Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is
#not provided, a default image name will be constructed in the form of
#<acr-name>.azurecr.io/github-action/container-app:<github-run-id>.<github-run-attempt>.'

    imageToBuild: # optional
    # 'The custom name of an image that has already been pushed to ACR and will be deployed to the Container App by this
#action. Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this
#argument is not provided, the value provided (or determined) for the "imageToBuild" argument will be used.'

    imageToDeploy: # optional
    # 'Relative path to the Dockerfile in the provided application source that should be used to build the image that is
#then pushed to ACR and deployed to the Container App. If not provided, this action will check if there is a file
#named "Dockerfile" in the provided application source and use that to build the image. Otherwise, the Oryx++
#Builder will be used to create the image.'

    dockerfilePath: # optional
    # 'The name of the Azure Container App that will be created or updated. If not provided, this value will be
#gh-action-app-<github-run-id>-<github-run-attempt>.'

    containerAppName: # optional, default is gh-action-app-${{ github.run_id }}-${{ github.run_attempt }}
    # 'The resource group that the Azure Container App will be created in. If not provided, this value will be
<container-app-name>-rg'

    resourceGroup: Devops
    # 'The name of the Azure Container App environment to use with the application. If not provided, an existing
environment in the resource group of the Container App will be used, otherwise, an environment will be created in
the format <container-app-name>-env'

    containerAppEnvironment: # optional
    # 'The platform version stack that the application runs in when deployed to the Azure Container App. This should
be provided in the format <platform>:<version>. If not provided, this value is determined by Oryx based on the
contents of the provided application. Please view the following document for more information on the supported
runtime stacks for Oryx:
https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md'

    runtimeStack: # optional
    # 'The designated port for the application to run on. If not provided, this value is 80 for Python and 8080 for all
other supported platforms.'

    targetPort: 8080
